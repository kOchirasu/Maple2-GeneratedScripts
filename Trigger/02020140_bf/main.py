""" trigger/02020140_bf/main.xml """
import trigger_api


class 시작대기중(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 아래 2개 맵 조명 설정, 1페이지 전투판만 비추는 조명
        # arg1 = AmbientColor RGB값
        self.set_ambient_light(primary=[45,21,28])
        # arg1 = DiffuseColor RGB값,  arg2 = SpecularColor RGB값
        self.set_directional_light(diffuse_color=[16,30,29], specular_color=[130,130,130])
        self.set_mesh(trigger_ids=[901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924], visible=False, start_delay=0, interval=0, fade=0) # 몬스터만 밟을 수 있는 투명벽 셋팅하기
        self.set_effect(trigger_ids=[301], visible=True) # 1페이즈 전투판의 빛기둥 생성
        # 이 변수가 1이 되면, 1페이즈용 보스가 등장하면서 1페이즈 전투 시작을 알림
        self.set_user_value(key='1PhaseSpawnStart', value=0)
        # 이 변수가 1이 되면, 2페이즈용 보스가 등장하면서 2페이즈 전투 시작을 알림
        self.set_user_value(key='2PhaseSpawnStart', value=0)
        # 최초 시작 지점에서 1페이즈 전투판으로 가는 포탈 최초에 감추기, 108: 스타팅 지점에서 1페이지 전투판 근처로 도착
        self.set_portal(portal_id=108, visible=False, enable=False, minimap_visible=False)
        self.set_portal(portal_id=118, visible=False, enable=False, minimap_visible=False) # 첫번째 왼쪽 졸구간 포탈 최초에 감추기
        self.set_portal(portal_id=128, visible=False, enable=False, minimap_visible=False) # 첫번째 가운데 졸구간 포탈 최초에 감추기
        self.set_portal(portal_id=138, visible=False, enable=False, minimap_visible=False) # 첫번째 오른쪽 졸구간 포탈 최초에 감추기
        self.set_portal(portal_id=218, visible=False, enable=False, minimap_visible=False) # 두번째 왼쪽 졸구간 포탈 최초에 감추기
        self.set_portal(portal_id=228, visible=False, enable=False, minimap_visible=False) # 두번째 가운데 졸구간 포탈 최초에 감추기
        self.set_portal(portal_id=238, visible=False, enable=False, minimap_visible=False) # 두번째 오른쪽 졸구간 포탈 최초에 감추기
        self.set_portal(portal_id=328, visible=False, enable=False, minimap_visible=False) # 세번번째 가운데 졸구간 포탈 최초에 감추기
        # 졸구간 끝내고 2페이지 전투판으로 가는 왼쪽 포탈 최초에 감추기
        self.set_portal(portal_id=318, visible=False, enable=False, minimap_visible=False)
        # 졸구간 끝내고 2페이지 전투판으로 가는 가운데 포탈 최초에 감추기
        self.set_portal(portal_id=428, visible=False, enable=False, minimap_visible=False)
        # 졸구간 끝내고 2페이지 전투판으로 가는 오른쪽 포탈 최초에 감추기
        self.set_portal(portal_id=338, visible=False, enable=False, minimap_visible=False)
        # 세번째페이즈 진행하는 맵 이동 포탈 처음에 감추기, 2페이즈 전투판에 설치한 포탈
        self.set_portal(portal_id=599, visible=False, enable=False, minimap_visible=False)
        # 최초 시작 지점에 바로 2페이지 메인 전투판으로 포내는 포탈 처음에는 감추기, 참고로 포탈 arg1="598" 과 arg1="108"은 스타팅 포인트 같은 좌표에 있음
        self.set_portal(portal_id=598, visible=False, enable=False, minimap_visible=False)
        # 각 졸구간 전투판에서 되돌아가는 포탈 최초에는 감추기
        self.set_portal(portal_id=9118, visible=False, enable=False, minimap_visible=False)
        self.set_portal(portal_id=9128, visible=False, enable=False, minimap_visible=False)
        self.set_portal(portal_id=9138, visible=False, enable=False, minimap_visible=False)
        self.set_portal(portal_id=9218, visible=False, enable=False, minimap_visible=False)
        self.set_portal(portal_id=9228, visible=False, enable=False, minimap_visible=False)
        self.set_portal(portal_id=9238, visible=False, enable=False, minimap_visible=False)
        self.set_portal(portal_id=9328, visible=False, enable=False, minimap_visible=False)
        # 플레이어만 막고 몬스터는 막지 않는 투명벽 설정
        self.set_mesh(trigger_ids=[949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999], visible=True, start_delay=1, interval=1, fade=1)
        # 졸구간 지형 최초에는 감추기
        # self.set_mesh(trigger_ids=[10001,10002,10003,10004,10005,10006,10007,10008,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019,10020,10021,10022,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033,10034,10035,10036,10037,10038,10039,10040,10041,10042,10043,10044,10045,10046,10047,10048,10049,10050,10051,10052,10053,10054,10055,10056,10057,10058,10059,10060,10061,10062,10063,10064,10065,10066,10067,10068,10069,10070,10071,10072,10073,10074,10075,10076,10077,10078,10079,10080,10081,10082,10083,10084,10085,10086,10087,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110,10111,10112,10113,10114,10115,10116,10117,10118,10119,10120,10121,10122,10123,10124,10125,10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139,10140,10141,10142,10143,10144,10145,10146,10147,10148,10149,10150,10151,10152,10153,10154,10155,10156,10157,10158,10159,10160,10161,10162,10163,10164,10165,10166,10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10179,10180,10181,10182,10183,10184,10185,10186,10187,10188,10189,10190,10191,10192,10193,10194,10195,10196,10197,10198,10199,10200,10201,10202,10203,10204,10205,10206,10207,10208,10209,10210,10211,10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227,10228,10229,10230,10231,10232,10233,10234,10235,10236,10237,10238,10239,10240,10241,10242,10243,10244,10245,10246,10247,10248,10249,10250,10251,10252,10253,10254,10255,10256,10257,10258,10259,10260,10261,10262,10263,10264,10265,10266,10267,10268,10269,10270,10271,10272,10273,10274,10275,10276,10277,10278,10279,10280,10281,10282,10283,10284,10285,10286,10287,10288,10289,10290,10291,10292,10293,10294,10295,10296,10297,10298,10299,10300,10301,10302,10303,10304,10305,10306,10307,10308,10309,10310,10311,10312,10313,10314,10315,10316,10317,10318,10319,10320,10321,10322,10323,10324,10325,10326,10327,10328,10329,10330,10331,10332,10333,10334,10335,10336,10337,10338,10339,10340,10341,10342,10343,10344,10345,10346,10347,10348,10349], visible=False, start_delay=0, interval=0, fade=0)
        # self.set_mesh(trigger_ids=[15001,15002,15003,15004,15005,15006,15007,15008,15009,15010,15011,15012,15013,15014,15015,15016,15017,15018,15019,15020,15021,15022,15023,15024,15025,15026,15027,15028,15029,15030,15031,15032,15033,15034,15035,15036,15037,15038,15039,15040,15041,15042,15043,15044,15045,15046,15047,15048,15049,15050,15051,15052,15053,15054,15055,15056,15057,15058,15059,15060,15061,15062,15063,15064,15065,15066,15067,15068,15069,15070,15071,15072,15073,15074,15075,15076,15077,15078,15079,15080,15081,15082,15083,15084,15085,15086,15087,15088,15089,15090,15091,15092,15093,15094,15095,15096,15097,15098,15099,15100,15101,15102,15103,15104,15105,15106,15107,15108,15109,15110,15111,15112,15113,15114,15115,15116,15117,15118,15119,15120,15121,15122,15123,15124,15125,15126,15127,15128,15129,15130,15131,15132,15133,15134,15135,15136,15137,15138,15139,15140,15141,15142,15143,15144,15145,15146,15147,15148,15149,15150,15151,15152,15153,15154,15155,15156,15157,15158,15159,15160,15161,15162,15163,15164,15165,15166,15167,15168,15169,15170,15171,15172,15173,15174,15175,15176,15177,15178,15179,15180,15181,15182,15183,15184,15185,15186,15187,15188,15189,15190,15191,15192,15193,15194,15195,15196,15197,15198,15199,15200,15201,15202,15203,15204,15205,15206,15207,15208,15209,15210,15211,15212,15213,15214,15215,15216,15217,15218,15219,15220,15221,15222,15223,15224,15225,15226,15227,15228,15229,15230,15231,15232,15233,15234,15235,15236,15237,15238,15239,15240,15241,15242,15243,15244,15245,15246,15247,15248,15249,15250,15251,15252,15253,15254,15255,15256,15257,15258,15259,15260,15261,15262,15263,15264,15265,15266,15267,15268,15269,15270,15271,15272,15273,15274,15275,15276,15277,15278,15279,15280,15281,15282,15283,15284,15285,15286,15287,15288,15289,15290,15291,15292,15293,15294,15295,15296,15297,15298,15299,15300,15301,15302,15303,15304,15305,15306,15307,15308,15309,15310,15311,15312,15313,15314,15315,15316,15317,15318,15319,15320,15321,15322,15323,15324,15325,15326,15327,15328,15329,15330,15331,15332,15333,15334,15335,15336,15337,15338,15339,15340,15341,15342,15343,15344,15345,15346,15347,15348,15349,15350,15351,15352,15353,15354,15355,15356,15357,15358,15359,15360,15361,15362,15363,15364,15365,15366,15367,15368,15369,15370,15371,15372,15373,15374,15375,15376,15377,15378,15379,15380,15381,15382,15383,15384,15385,15386,15387,15388,15389,15390,15391,15392,15393,15394,15395,15396,15397,15398,15399,15400,15401,15402,15403,15404,15405,15406,15407,15408,15409,15410,15411,15412,15413,15414,15415,15416,15417,15418,15419,15420,15421,15422,15423,15424,15425,15426,15427,15428,15429,15430,15431,15432,15433,15434,15435,15436,15437,15438,15439,15440,15441,15442,15443,15444,15445,15446,15447,15448,15449,15450,15451,15452,15453,15454,15455,15456,15457,15458,15459,15460,15461,15462,15463,15464,15465,15466,15467], visible=False, start_delay=0, interval=0, fade=0)
        # self.set_mesh(trigger_ids=[20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,20011,20012,20013,20014,20015,20016,20017,20018,20019,20020,20021,20022,20023,20024,20025,20026,20027,20028,20029,20030,20031,20032,20033,20034,20035,20036,20037,20038,20039,20040,20041,20042,20043,20044,20045,20046,20047,20048,20049,20050,20051,20052,20053,20054,20055,20056,20057,20058,20059,20060,20061,20062,20063,20064,20065,20066,20067,20068,20069,20070,20071,20072,20073,20074,20075,20076,20077,20078,20079,20080,20081,20082,20083,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20094,20095,20096,20097,20098,20099,20100,20101,20102,20103,20104,20105,20106,20107,20108,20109,20110,20111,20112,20113,20114,20115,20116,20117,20118,20119,20120,20121,20122,20123,20124,20125,20126,20127,20128,20129,20130,20131,20132,20133,20134,20135,20136,20137,20138,20139,20140,20141,20142,20143,20144,20145,20146,20147,20148,20149,20150,20151,20152,20153,20154,20155,20156,20157,20158,20159,20160,20161,20162,20163,20164,20165,20166,20167,20168,20169,20170,20171,20172,20173,20174,20175,20176,20177,20178,20179,20180,20181,20182,20183,20184,20185,20186,20187,20188,20189,20190,20191,20192,20193,20194,20195,20196,20197,20198,20199,20200,20201,20202,20203,20204,20205,20206,20207,20208,20209,20210,20211,20212,20213,20214,20215], visible=False, start_delay=0, interval=0, fade=0)
        # self.set_mesh(trigger_ids=[23001,23002,23003,23004,23005,23006,23007,23008,23009,23010,23011,23012,23013,23014,23015,23016,23017,23018,23019,23020,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23033,23034,23035,23036,23037,23038,23039,23040,23041,23042,23043,23044,23045,23046,23047,23048,23049,23050,23051,23052,23053,23054,23055,23056,23057,23058,23059,23060,23061,23062,23063,23064,23065,23066,23067,23068,23069,23070,23071,23072,23073,23074,23075,23076,23077,23078,23079,23080,23081,23082,23083,23084,23085,23086,23087,23088,23089,23090,23091,23092,23093,23094,23095,23096,23097,23098,23099,23100,23101,23102,23103,23104,23105,23106,23107,23108,23109,23110,23111,23112,23113,23114,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23125,23126,23127,23128,23129,23130,23131,23132,23133,23134,23135,23136,23137,23138,23139,23140,23141,23142,23143,23144,23145,23146,23147,23148,23149,23150,23151,23152,23153,23154,23155,23156,23157,23158,23159,23160,23161,23162,23163,23164,23165,23166,23167,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23186,23187,23188,23189,23190,23191,23192,23193,23194,23195,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23210,23211,23212,23213,23214,23215], visible=False, start_delay=0, interval=0, fade=0)
        # self.set_mesh(trigger_ids=[26001,26002,26003,26004,26005,26006,26007,26008,26009,26010,26011,26012,26013,26014,26015,26016,26017,26018,26019,26020,26021,26022,26023,26024,26025,26026,26027,26028,26029,26030,26031,26032,26033,26034,26035,26036,26037,26038,26039,26040,26041,26042,26043,26044,26045,26046,26047,26048,26049,26050,26051,26052,26053,26054,26055,26056,26057,26058,26059,26060,26061,26062,26063,26064,26065,26066,26067,26068,26069,26070,26071,26072,26073,26074,26075,26076,26077,26078,26079,26080,26081,26082,26083,26084,26085,26086,26087,26088,26089,26090,26091,26092,26093,26094,26095,26096,26097,26098,26099,26100,26101,26102,26103,26104,26105,26106,26107,26108,26109,26110,26111,26112,26113,26114,26115,26116,26117,26118,26119,26120,26121,26122,26123,26124,26125,26126,26127,26128,26129,26130,26131,26132,26133,26134,26135,26136,26137,26138,26139,26140,26141,26142,26143,26144,26145,26146,26147,26148,26149,26150,26151,26152,26153,26154,26155,26156,26157,26158,26159,26160,26161,26162,26163,26164,26165,26166,26167,26168,26169,26170,26171,26172,26173,26174,26175,26176,26177,26178,26179,26180,26181,26182,26183,26184,26185,26186,26187,26188,26189,26190,26191,26192,26193,26194,26195,26196,26197,26198,26199,26200,26201,26202,26203,26204,26205,26206,26207,26208,26209,26210,26211,26212,26213,26214,26215], visible=False, start_delay=0, interval=0, fade=0)
        # self.set_mesh(trigger_ids=[30001,30002,30003,30004,30005,30006,30007,30008,30009,30010,30011,30012,30013,30014,30015,30016,30017,30018,30019,30020,30021,30022,30023,30024,30025,30026,30027,30028,30029,30030,30031,30032,30033,30034,30035,30036,30037,30038,30039,30040,30041,30042,30043,30044,30045,30046,30047,30048,30049,30050,30051,30052,30053,30054,30055,30056,30057,30058,30059,30060,30061,30062,30063,30064,30065,30066,30067,30068,30069,30070,30071,30072,30073,30074,30075,30076,30077,30078,30079,30080,30081,30082,30083,30084,30085,30086,30087,30088,30089,30090,30091,30092,30093,30094,30095,30096,30097,30098,30099,30100,30101,30102,30103,30104,30105,30106,30107,30108,30109,30110,30111,30112,30113,30114,30115,30116,30117,30118,30119,30120,30121,30122,30123,30124,30125,30126,30127,30128,30129,30130,30131,30132,30133,30134,30135,30136,30137,30138,30139,30140,30141,30142,30143,30144,30145,30146,30147,30148,30149,30150,30151,30152,30153,30154,30155,30156,30157,30158,30159,30160,30161,30162,30163,30164,30165,30166,30167,30168,30169,30170,30171,30172,30173,30174,30175,30176,30177,30178,30179,30180,30181,30182,30183,30184,30185,30186,30187,30188,30189,30190,30191,30192,30193,30194,30195,30196,30197,30198,30199,30200,30201,30202,30203,30204,30205,30206,30207,30208,30209,30210,30211,30212,30213,30214,30215,30216,30217,30218,30219,30220,30221,30222,30223,30224,30225,30226,30227,30228,30229,30230,30231,30232,30233,30234,30235,30236,30237,30238,30239,30240,30241,30242,30243,30244,30245,30246,30247,30248,30249,30250,30251,30252,30253,30254,30255,30256,30257,30258,30259,30260,30261,30262,30263,30264,30265,30266,30267,30268,30269,30270,30271,30272,30273,30274,30275,30276,30277,30278,30279,30280,30281,30282,30283,30284,30285,30286,30287,30288,30289,30290,30291,30292,30293,30294,30295,30296,30297,30298,30299,30300,30301,30302,30303,30304,30305,30306,30307,30308,30309,30310,30311,30312,30313,30314,30315,30316,30317,30318,30319,30320,30321,30322,30323,30324,30325,30326,30327,30328,30329,30330,30331,30332,30333,30334,30335,30336,30337,30338,30339,30340,30341,30342,30343,30344,30345,30346,30347,30348,30349,30350,30351,30352,30353,30354,30355,30356,30357,30358,30359,30360,30361,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30372,30373,30374,30375,30376,30377,30378,30379,30380,30381,30382,30383,30384,30385,30386,30387,30388,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30399,30400,30401,30402,30403,30404,30405,30406,30407,30408,30409,30410,30411,30412,30413], visible=False, start_delay=0, interval=0, fade=0)
        # # <state name="졸구간진행체크중"> 에서 사용할 중요한 변수 설정하기
        self.set_mesh(trigger_ids=[35001,35002,35003,35004,35005,35006,35007,35008,35009,35010,35011,35012,35013,35014,35015,35016,35017,35018,35019,35020,35021,35022,35023,35024,35025,35026,35027,35028,35029,35030,35031,35032,35033,35034,35035,35036,35037,35038,35039,35040,35041,35042,35043,35044,35045,35046,35047,35048,35049,35050,35051,35052,35053,35054,35055,35056,35057,35058,35059,35060,35061,35062,35063,35064,35065,35066,35067,35068,35069,35070,35071,35072,35073,35074,35075,35076,35077,35078,35079,35080,35081,35082,35083,35084,35085,35086,35087,35088,35089,35090,35091,35092,35093,35094,35095,35096,35097,35098,35099,35100,35101,35102,35103,35104,35105,35106,35107,35108,35109,35110,35111,35112,35113,35114,35115,35116,35117,35118,35119,35120,35121,35122,35123,35124,35125,35126,35127,35128,35129,35130,35131,35132,35133,35134,35135,35136,35137,35138,35139,35140,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35166,35167,35168,35169,35170,35171,35172,35173,35174,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35195,35196,35197,35198,35199,35200,35201,35202,35203,35204,35205,35206,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35265,35266,35267,35268,35269,35270,35271,35272,35273,35274,35275,35276,35277,35278,35279,35280,35281,35282,35283,35284,35285,35286,35287,35288,35289,35290,35291,35292,35293,35294,35295,35296,35297,35298,35299,35300,35301,35302,35303,35304,35305,35306,35307,35308,35309,35310,35311,35312,35313,35314,35315,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35328,35329,35330,35331,35332,35333,35334,35335,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35390,35391,35392,35393,35394,35395,35396,35397,35398,35399,35400,35401,35402], visible=False, start_delay=0, interval=0, fade=0)
        # 이 변수 99 하기, 이거 안하면   condition 에서  value="0" 체크되어 트리거 로직 꼬일 수 있음
        self.set_user_value(key='TriggerMesh11', value=99)
        # 이 변수 99 하기, 이거 안하면   condition 에서  value="0" 체크되어 트리거 로직 꼬일 수 있음
        self.set_user_value(key='TriggerMesh21', value=99)
        # 이 변수 99 하기, 이거 안하면   condition 에서  value="0" 체크되어 트리거 로직 꼬일 수 있음
        self.set_user_value(key='TriggerMesh12', value=99)
        # 이 변수 99 하기, 이거 안하면   condition 에서  value="0" 체크되어 트리거 로직 꼬일 수 있음
        self.set_user_value(key='TriggerMesh22', value=99)
        # 이 변수 99 하기, 이거 안하면   condition 에서  value="0" 체크되어 트리거 로직 꼬일 수 있음
        self.set_user_value(key='TriggerMesh32', value=99)
        # 이 변수 99 하기, 이거 안하면   condition 에서  value="0" 체크되어 트리거 로직 꼬일 수 있음
        self.set_user_value(key='TriggerMesh13', value=99)
        # 이 변수 99 하기, 이거 안하면   condition 에서  value="0" 체크되어 트리거 로직 꼬일 수 있음
        self.set_user_value(key='TriggerMesh23', value=99)
        # 이 변수 99 하기, 이거 안하면   나중에 condition 에서  value="1" 체크함
        self.set_user_value(key='TurkaTwoPhaseEnd', value=99)

    def on_tick(self) -> trigger_api.Trigger:
        if self.user_detected(box_ids=[99]):
            # MS2TriggerBox   TriggerObjectID = 99, 이 트리거 박스 안에 플레이어가 한명이라도 체크 되면        99는 스타팅 포인트 지점만 커버하는 비교적 좁은 범위
            return 연출용보스등장(self.ctx)


class 연출용보스등장(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        self.spawn_monster(spawn_ids=[100], auto_target=False)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=2000):
            # WaitTick  시간 조절 연출 타이밍 맞춤
            return 투르카대사연출(self.ctx)


class 투르카대사연출(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        self.side_npc_talk(npc_id=23000120, illust='Turka_normal', duration=9000, script='$02020140_BF__PopUpCinema__0$')

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=1000):
            # 일러스트 대사 연출이 몇초간 나온 다음에 전투판 진입 포탈이 생성되도록 함
            return 페이즈보스등장대기1(self.ctx)


class 페이즈보스등장대기1(trigger_api.Trigger):
    def on_tick(self) -> trigger_api.Trigger:
        if self.user_value(key='1PhaseSpawnStart') >= 1:
            # 시작 이벤트 연출용 NPC의 "AI_TurkaReaperCostume_EventStart.xml" 에서 이 변수 1 신호를 받아서 1페이즈 보스 등장시킴
            return 페이즈보스등장1(self.ctx)
        if self.dungeon_timeout():
            # 던전 시간 다 된경우
            return 던전실패(self.ctx)
        if self.dungeon_state() == 'Fail':
            # 던전을 포기해서 실패한 경우
            return 던전실패(self.ctx)


class 페이즈보스등장1(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        self.spawn_monster(spawn_ids=[101], auto_target=False) # 1페이즈용 투르카 보스 등장시키기

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=4500):
            # WaitTick  시간 조절 연출 타이밍 맞춤
            return 페이즈전투진행1(self.ctx)
        if self.dungeon_timeout():
            # 던전 시간 다 된경우
            return 던전실패(self.ctx)
        if self.dungeon_state() == 'Fail':
            # 던전을 포기해서 실패한 경우
            return 던전실패(self.ctx)


class 페이즈전투진행1(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 최초 시작 지점에서 1페이즈 전투판으로 가는 포탈 등장시키기
        self.set_portal(portal_id=108, visible=True, enable=True, minimap_visible=True)

    def on_tick(self) -> trigger_api.Trigger:
        if self.user_value(key='2PhaseSpawnStart') >= 1:
            # 1페이즈 트루카 HP 1%가 되면 AI에서 이 변수 1 신호 보내고 스스로 사라짐
            return 페이즈전투완료_2페이즈투르카등장1(self.ctx)
        if self.dungeon_timeout():
            # 던전 시간 다 된경우
            return 던전실패(self.ctx)
        if self.dungeon_state() == 'Fail':
            # 던전을 포기해서 실패한 경우
            return 던전실패(self.ctx)


class 페이즈전투완료_2페이즈투르카등장1(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        self.spawn_monster(spawn_ids=[102], auto_target=False) # 2페이즈용 투르카 보스 등장시키기
        # 플레이어에게 걸려있는 타겟팅 저주 디버프 제거하기, arg1="98"는 1페이즈 전투판을 커버하고 있는 트리거영역 ID임
        self.remove_buff(box_id=98, skill_id=50004418)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=6000):
            # 보스 1페이즈 전투 끝나면, 맵 조명 변경하고 -> 투르카 특수 행동하고 -> 보스AI로 부터 신호 받아서 -> 졸구간 지형생성 등등 연출이 나오는데 적당한 시간 타이밍 조절 필요해 waitTick 수치 조절 해야함
            return 졸구간시작연출딜레이(self.ctx)
        if self.dungeon_timeout():
            # 던전 시간 다 된경우
            return 던전실패(self.ctx)
        if self.dungeon_state() == 'Fail':
            # 던전을 포기해서 실패한 경우
            return 던전실패(self.ctx)


class 졸구간시작연출딜레이(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        self.set_effect(trigger_ids=[301], visible=False) # 1페이즈 전투판 빛기둥 제거
        # 아래 2개 맵 조명 설정, 모든 전투판을 비추는 조명으로 변경하기
        # arg1 = AmbientColor RGB값
        self.set_ambient_light(primary=[255,140,172])
        # arg1 = DiffuseColor RGB값,  arg2 = SpecularColor RGB값
        self.set_directional_light(diffuse_color=[146,221,218], specular_color=[130,130,130])
        # 2페이즈 부터 맵이 밝아지면서, 백그라운드 이미지 교체함
        self.change_background(dds='BG_Turka_D.dds')

    def on_tick(self) -> trigger_api.Trigger:
        if self.user_value(key='StageOpen') >= 1:
            # 보스AI로 부터 신호 받아서 -> 졸구간 지형생성 등등 연출 시작
            return 최초졸구간몬스터등장(self.ctx)


class 최초졸구간몬스터등장(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 첫번째 구간의 왼쪽 가운데 오른쪽 졸구간, 클리어 유무 판단을 위한 졸몹 마리수 체크 변수 셋팅 시작하기
        # 첫번째 왼쪽 졸구간 졸몹 마리수 체크하기 위한 변수 0  셋팅하여 마리수 체크 시작하기, 이후 졸몹 등장하면 졸몹 AI에게 이 변수 +1씩 하여 마리수 체크하며, 죽으면 -1씩 하며, 결국 0이 되면 트리거 다음 단계로 넘어가도록 함
        self.set_user_value(key='TriggerMesh11', value=0)
        # 첫번째 가운데 졸구간 졸몹 마리수 체크하기 위한 변수 0  셋팅하여 마리수 체크 시작하기, 이후 졸몹 등장하면 졸몹 AI에게 이 변수 +1씩 하여 마리수 체크하며, 죽으면 -1씩 하며, 결국 0이 되면 트리거 다음 단계로 넘어가도록 함
        self.set_user_value(key='TriggerMesh12', value=0)
        # 첫번째 오른쪽 졸구간 졸몹 마리수 체크하기 위한 변수 0  셋팅하여 마리수 체크 시작하기, 이후 졸몹 등장하면 졸몹 AI에게 이 변수 +1씩 하여 마리수 체크하며, 죽으면 -1씩 하며, 결국 0이 되면 트리거 다음 단계로 넘어가도록 함
        self.set_user_value(key='TriggerMesh13', value=0)
        # <action name="메쉬를설정한다" arg1="10001-10349" arg2="1" arg3="1" arg4="1" arg5="0.5" />	  	첫번째 왼쪽 졸구간 지형 등장 & 졸몹 등장
        # 중요: 이 졸몹은 등장하자마자 AI에서 트리거 쪽으로 TriggerMesh?? 변수 +1 신호를 보내야 하기 때문에 꼭 등장하자마자 바로 전투 상태가 되어야 함
        self.spawn_monster(spawn_ids=[1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115], auto_target=False)
        # <action name="메쉬를설정한다" arg1="20001-20215" arg2="1" arg3="1" arg4="1" arg5="0.5" />	 첫번째 가운데 졸구간 지형 등장 & 졸몹 등장
        # 중요: 이 졸몹은 등장하자마자 AI에서 트리거 쪽으로 TriggerMesh?? 변수 +1 신호를 보내야 하기 때문에 꼭 등장하자마자 바로 전투 상태가 되어야 함
        self.spawn_monster(spawn_ids=[1201,1202,1203,1204,1205], auto_target=False)
        # <action name="메쉬를설정한다" arg1="30001-30413" arg2="1" arg3="1" arg4="1" arg5="0.5" />		첫번째 오른쪽 졸구간 지형 등장 & 졸몹 등장
        # 중요: 이 졸몹은 등장하자마자 AI에서 트리거 쪽으로 TriggerMesh?? 변수 +1 신호를 보내야 하기 때문에 꼭 등장하자마자 바로 전투 상태가 되어야 함
        self.spawn_monster(spawn_ids=[1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313], auto_target=False)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=7000):
            # 중요!! 충분한 waitTick 시간 설정해야 함: 가운데 지형 졸몹 약점속성 버프 받을때까지 여기서 잠시 대기함, 그리고 졸몹이 등장하고 전투 상태가 되어서 TriggerMesh?? 변수에 +1 신호 받을때까지 잠시 대기 시간도 필요함
            return 졸구간본격진행(self.ctx)


class 졸구간본격진행(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 전투판 지형 다 생성된 다음에 포탈 생성되도록 하기
        self.set_portal(portal_id=118, visible=True, enable=True, minimap_visible=True) # 첫번째 왼쪽 졸구간 진입 포탈 생성
        self.set_portal(portal_id=128, visible=True, enable=True, minimap_visible=True) # 첫번째 가운데 졸구간 진입 포탈 생성
        self.set_portal(portal_id=138, visible=True, enable=True, minimap_visible=True) # 첫번째 오른쪽 졸구간 진입 포탈 생성
        # 각 졸구간 전투판에서 되돌아가는 포탈 생성되도록 하기
        self.set_portal(portal_id=9118, visible=True, enable=True, minimap_visible=True)
        self.set_portal(portal_id=9128, visible=True, enable=True, minimap_visible=True)
        self.set_portal(portal_id=9138, visible=True, enable=True, minimap_visible=True)
        self.set_portal(portal_id=9218, visible=True, enable=True, minimap_visible=True)
        self.set_portal(portal_id=9228, visible=True, enable=True, minimap_visible=True)
        self.set_portal(portal_id=9238, visible=True, enable=True, minimap_visible=True)
        self.set_portal(portal_id=9328, visible=True, enable=True, minimap_visible=True)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=2000):
            return 졸구간진행체크중(self.ctx)


class 졸구간진행체크중(trigger_api.Trigger):
    def on_tick(self) -> trigger_api.Trigger:
        if self.user_value(key='TriggerMesh11') >= 0:
            # 첫번째 왼쪽지형 졸몹이 다 죽으면 TriggerMesh11 변수 0이  되어, 두번째 왼쪽지형 졸몹 등장 단계로 넘어감
            return 두번째왼쪽진행01(self.ctx)
        if self.user_value(key='TriggerMesh12') >= 0:
            # 첫번째 가운데지형 졸몹이 다 죽으면 TriggerMesh12 변수 0이  되어, 두번째 가운데지형 졸몹 등장  단계로 넘어감
            return 두번째가운데진행01(self.ctx)
        if self.user_value(key='TriggerMesh13') >= 0:
            # 첫번째 오른쪽지형 졸몹이 다 죽으면 TriggerMesh13 변수 0이  되어, 두번째 오른쪽지형 졸몹 등장  단계로 넘어감
            return 두번째오른쪽진행01(self.ctx)
        if self.user_value(key='TriggerMesh22') >= 0:
            # 두번째 가운데지형 졸몹이 다 죽으면 TriggerMesh22 변수 0이  되어, 세번째 가운데지형 졸몹 등장  단계로 넘어감
            return 세번째가운데진행01(self.ctx)
        if self.user_value(key='TriggerMesh21') >= 0:
            # 두번째 왼쪽지형 졸몹이 다 죽으면 TriggerMesh21 변수 0이  되어, 2페이즈 보스 전투판으로 가는 포탈 생성하기
            # 중요: 이 곳에서 실행되면 보스의 AI_TurkaHoodForce_Phase02.xml 에 설정된  TwoPhaseMainBattle 변수의 1 신호를 보냄
            return 왼쪽지점보스방가는포탈생성(self.ctx)
        if self.user_value(key='TriggerMesh32') >= 0:
            # 세번째 가운데지형 졸몹이 다 죽으면 TriggerMesh32 변수 0이  되어, 2페이즈 보스 전투판으로 가는 포탈 생성하기
            # 중요: 이 곳에서 실행되면 보스의 AI_TurkaHoodForce_Phase02.xml 에 설정된  TwoPhaseMainBattle 변수의 1 신호를 보냄
            return 가운데지점보스방가는포탈생성(self.ctx)
        if self.user_value(key='TriggerMesh23') >= 0:
            # 두번째 오른쪽지형 졸몹이 다 죽으면 TriggerMesh23 변수 0이  되어, 2페이즈 보스 전투판으로 가는 포탈 생성하기
            # 중요: 이 곳에서 실행되면 보스의 AI_TurkaHoodForce_Phase02.xml 에 설정된  TwoPhaseMainBattle 변수의 1 신호를 보냄
            return 오른쪽지점보스방가는포탈생성(self.ctx)
        if self.user_value(key='2PhaseStartOk') >= 1:
            # 두번째 페이즈에서의 투르카 보스의 AI_TurkaHoodForce_Phase02.xml AI에서 본격 2페이즈 전투 시작하면서 2PhaseStartOk 변수 1 신호를 보내는데, 이 변수 1이 되면 모든 졸구간에서의 포탈 생성시키고, 졸몹 제거함
            return 모든졸구간지형과포탈생성(self.ctx)
        if self.user_value(key='TurkaTwoPhaseEnd') >= 1:
            # 두번째 페이즈에서의 투르카 보스 전투 끝나면 이 보스 AI에서 TurkaTwoPhaseEnd 변수 1 신호를 받게 되어 이 맵에서의 진행 끝내기
            return 이맵에서진행끝내고다음맵으로이동(self.ctx)
        if self.dungeon_timeout():
            # 던전 시간 다 된경우
            return 던전실패(self.ctx)
        if self.dungeon_state() == 'Fail':
            # 던전을 포기해서 실패한 경우
            return 던전실패(self.ctx)


class 두번째왼쪽진행01(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 이 변수 -1 하여 무한루프에 빠지지 않게 함
        self.set_user_value(key='TriggerMesh11', value=-1)
        # 두번째 왼쪽 졸구간 졸몹 마리수 체크하기 위한 변수 0 초기화 셋팅하여 마리수 체크 시작하기, 이후 졸몹 등장하면 졸몹 AI에게 이 변수 +1씩 하여 마리수 체크하며, 죽으면 -1씩 하며, 결국 0이 되면 트리거 다음 단계로 넘어가도록 함
        self.set_user_value(key='TriggerMesh21', value=0)
        # <action name="메쉬를설정한다" arg1="15001-15467" arg2="1" arg3="1" arg4="1" arg5="0.5" />	 두번째 왼쪽 졸구간 지형 등장 & 졸몹등장
        # 중요: 이 졸몹은 등장하자마자 AI에서 트리거 쪽으로 TriggerMesh?? 변수 +1 신호를 보내야 하기 때문에 꼭 등장하자마자 바로 전투 상태가 되어야 함
        self.spawn_monster(spawn_ids=[2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120], auto_target=False)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=3199):
            # 두번째 왼쪽 지형 졸몹 등장하여 이 졸몹 AI에게 TriggerMesh?? 변수 +1 신호 받을때까지 여기서 WaitTick 잠시 대기하기
            return 두번째왼쪽진행02(self.ctx)


class 두번째왼쪽진행02(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        self.set_portal(portal_id=218, visible=True, enable=True, minimap_visible=True) # 두번째 왼쪽 졸구간 포탈 생성

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=799):
            return 졸구간진행체크중(self.ctx)


class 두번째가운데진행01(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 이 변수 -1 하여 무한루프에 빠지지 않게 함
        self.set_user_value(key='TriggerMesh12', value=-1)
        # 두번째 가운데 졸구간 졸몹 마리수 체크하기 위한 변수 0 초기화 셋팅하여 마리수 체크 시작하기, 이후 졸몹 등장하면 졸몹 AI에게 이 변수 +1씩 하여 마리수 체크하며, 죽으면 -1씩 하며, 결국 0이 되면 트리거 다음 단계로 넘어가도록 함
        self.set_user_value(key='TriggerMesh22', value=0)
        # <action name="메쉬를설정한다" arg1="23001-23215" arg2="1" arg3="1" arg4="1" arg5="0.5" />	두번째 가운데  졸구간 지형 등장 & 졸몹등장
        # 중요: 이 졸몹은 등장하자마자 AI에서 트리거 쪽으로 TriggerMesh?? 변수 +1 신호를 보내야 하기 때문에 꼭 등장하자마자 바로 전투 상태가 되어야 함
        self.spawn_monster(spawn_ids=[2201,2202,2203,2204,2205], auto_target=False)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=3199):
            # 전투판 지형 생기는 도중에 바로 포탈 진입시 추락할 수 있어서, 적절한 시간 조절 필요함, 그리고 졸몹 등장하여 이 졸몹 AI에게  TriggerMesh?? 변수 +1 신호 받을때까지 여기서 WaitTick 잠시 대기하기
            return 두번째가운데진행02(self.ctx)


class 두번째가운데진행02(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        self.set_portal(portal_id=228, visible=True, enable=True, minimap_visible=True) # 두번째 가운데 졸구간 포탈 생성

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=799):
            return 졸구간진행체크중(self.ctx)


class 세번째가운데진행01(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 이 변수 -1 하여 무한루프에 빠지지 않게 함
        self.set_user_value(key='TriggerMesh22', value=-1)
        # 세번째 가운데 졸구간 졸몹 마리수 체크하기 위한 변수 0 초기화 셋팅하여 마리수 체크 시작하기, 이후 졸몹 등장하면 졸몹 AI에게 이 변수 +1씩 하여 마리수 체크하며, 죽으면 -1씩 하며, 결국 0이 되면 트리거 다음 단계로 넘어가도록 함
        self.set_user_value(key='TriggerMesh32', value=0)
        # <action name="메쉬를설정한다" arg1="26001-26215" arg2="1" arg3="1" arg4="1" arg5="0.5" />	세번째 가운데  졸구간 지형 등장 & 졸몹등장
        # 중요: 이 졸몹은 등장하자마자 AI에서 트리거 쪽으로 TriggerMesh?? 변수 +1 신호를 보내야 하기 때문에 꼭 등장하자마자 바로 전투 상태가 되어야 함
        self.spawn_monster(spawn_ids=[3201,3202,3203,3204,3205], auto_target=False)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=3199):
            # 전투판 지형 생기는 도중에 바로 포탈 진입시 추락할 수 있어서, 적절한 시간 조절 필요함, 그리고 졸몹 등장하여 이 졸몹 AI에게  TriggerMesh?? 변수 +1 신호 받을때까지 여기서 WaitTick 잠시 대기하기
            return 세번째가운데진행02(self.ctx)


class 세번째가운데진행02(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        self.set_portal(portal_id=328, visible=True, enable=True, minimap_visible=True) # 세번째 왼쪽 졸구간 포탈 생성

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=799):
            return 졸구간진행체크중(self.ctx)


class 두번째오른쪽진행01(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 이 변수 -1 하여 무한루프에 빠지지 않게 함
        self.set_user_value(key='TriggerMesh13', value=-1)
        # 두번째 오른쪽 졸구간 졸몹 마리수 체크하기 위한 변수 0 초기화 셋팅하여 마리수 체크 시작하기, 이후 졸몹 등장하면 졸몹 AI에게 이 변수 +1씩 하여 마리수 체크하며, 죽으면 -1씩 하며, 결국 0이 되면 트리거 다음 단계로 넘어가도록 함
        self.set_user_value(key='TriggerMesh23', value=0)
        # <action name="메쉬를설정한다" arg1="35001-35402" arg2="1" arg3="1" arg4="1" arg5="0.5" />		두번째 오른쪽 졸구간 지형 등장 & 졸몹등장
        # 중요: 이 졸몹은 등장하자마자 AI에서 트리거 쪽으로 TriggerMesh?? 변수 +1 신호를 보내야 하기 때문에 꼭 등장하자마자 바로 전투 상태가 되어야 함
        self.spawn_monster(spawn_ids=[2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315], auto_target=False)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=3199):
            # 전투판 지형 생기는 도중에 바로 포탈 진입시 추락할 수 있어서, 적절한 시간 조절 필요함, 그리고 졸몹 등장하여 이 졸몹 AI에게  TriggerMesh?? 변수 +1 신호 받을때까지 여기서 WaitTick 잠시 대기하기
            return 두번째오른쪽진행02(self.ctx)


class 두번째오른쪽진행02(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        self.set_portal(portal_id=238, visible=True, enable=True, minimap_visible=True) # 두번째 오른쪽 졸구간 포탈 생성

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=799):
            return 졸구간진행체크중(self.ctx)


# 아래 3개는 졸구간 다 끝내고 2페이즈 보스 전투판으로 가는 포탈 생성하는 부분
class 왼쪽지점보스방가는포탈생성(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 이 변수 -1 하여 무한루프에 빠지지 않게 함
        self.set_user_value(key='TriggerMesh21', value=-1)
        self.set_portal(portal_id=318, visible=True, enable=True, minimap_visible=True) # 보스 전투판으로 가는 왼쪽 졸구간 포탈 생성
        # AI_TurkaHoodForce_Phase02.xml 에 있는 TwoPhaseMainBattle 변수에 1 설정해서 보스가 본격 2페이지 전투 시작하도록 함
        self.set_ai_extra_data(key='TwoPhaseMainBattle', value=1)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=500):
            # 안내 메시지 5~6초 정도 출력후 다시 "졸구간진행체크중" 으로 되돌아 가는 구조임
            return 페이즈복격진행_안내메시지출력2(self.ctx)


class 가운데지점보스방가는포탈생성(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 이 변수 -1 하여 무한루프에 빠지지 않게 함
        self.set_user_value(key='TriggerMesh32', value=-1)
        # 보스 전투판으로 가는 가운데 졸구간 포탈 생성
        self.set_portal(portal_id=428, visible=True, enable=True, minimap_visible=True)
        # AI_TurkaHoodForce_Phase02.xml 에 있는 TwoPhaseMainBattle 변수에 1 설정해서 보스가 본격 2페이지 전투 시작하도록 함
        self.set_ai_extra_data(key='TwoPhaseMainBattle', value=1)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=500):
            # 안내 메시지 5~6초 정도 출력후 다시 "졸구간진행체크중" 으로 되돌아 가는 구조임
            return 페이즈복격진행_안내메시지출력2(self.ctx)


class 오른쪽지점보스방가는포탈생성(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 이 변수 -1 하여 무한루프에 빠지지 않게 함
        self.set_user_value(key='TriggerMesh23', value=-1)
        # 보스 전투판으로 가는 오른쪽 졸구간 포탈 생성
        self.set_portal(portal_id=338, visible=True, enable=True, minimap_visible=True)
        # AI_TurkaHoodForce_Phase02.xml 에 있는 TwoPhaseMainBattle 변수에 1 설정해서 보스가 본격 2페이지 전투 시작하도록 함
        self.set_ai_extra_data(key='TwoPhaseMainBattle', value=1)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=500):
            # 안내 메시지 5~6초 정도 출력후 다시 "졸구간진행체크중" 으로 되돌아 가는 구조임
            return 페이즈복격진행_안내메시지출력2(self.ctx)


class 페이즈복격진행_안내메시지출력2(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # CubeBreak ,  MS2TriggerSkill = 91 스킬코드 70000105(레벨1) 발동시켜 마법구슬 지점에 계단을 막고 있는 큐브 제거함
        self.set_skill(trigger_ids=[91], enable=True)
        # 안내 메시지 호출하기, 메시지 글씨 작성 엑셀파일은 여기 stringGuide.xlsx
        self.show_guide_summary(entity_id=29200003, text_id=29200003)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=6500):
            # 안내 메시지 5~6초 정도 출력후 다시 "졸구간진행체크중" 으로 되돌아가기
            return 졸구간진행체크중(self.ctx)

    def on_exit(self) -> None:
        self.hide_guide_summary(entity_id=29200003)


class 모든졸구간지형과포탈생성(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 이 변수 -1 하여 무한루프에 빠지지 않게 함
        self.set_user_value(key='2PhaseStartOk', value=-1)
        # 보스가 본격 2페이즈 전투 시작하면 모든 지형 생성하기
        # self.set_mesh(trigger_ids=[10001,10002,10003,10004,10005,10006,10007,10008,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019,10020,10021,10022,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033,10034,10035,10036,10037,10038,10039,10040,10041,10042,10043,10044,10045,10046,10047,10048,10049,10050,10051,10052,10053,10054,10055,10056,10057,10058,10059,10060,10061,10062,10063,10064,10065,10066,10067,10068,10069,10070,10071,10072,10073,10074,10075,10076,10077,10078,10079,10080,10081,10082,10083,10084,10085,10086,10087,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110,10111,10112,10113,10114,10115,10116,10117,10118,10119,10120,10121,10122,10123,10124,10125,10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139,10140,10141,10142,10143,10144,10145,10146,10147,10148,10149,10150,10151,10152,10153,10154,10155,10156,10157,10158,10159,10160,10161,10162,10163,10164,10165,10166,10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10179,10180,10181,10182,10183,10184,10185,10186,10187,10188,10189,10190,10191,10192,10193,10194,10195,10196,10197,10198,10199,10200,10201,10202,10203,10204,10205,10206,10207,10208,10209,10210,10211,10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227,10228,10229,10230,10231,10232,10233,10234,10235,10236,10237,10238,10239,10240,10241,10242,10243,10244,10245,10246,10247,10248,10249,10250,10251,10252,10253,10254,10255,10256,10257,10258,10259,10260,10261,10262,10263,10264,10265,10266,10267,10268,10269,10270,10271,10272,10273,10274,10275,10276,10277,10278,10279,10280,10281,10282,10283,10284,10285,10286,10287,10288,10289,10290,10291,10292,10293,10294,10295,10296,10297,10298,10299,10300,10301,10302,10303,10304,10305,10306,10307,10308,10309,10310,10311,10312,10313,10314,10315,10316,10317,10318,10319,10320,10321,10322,10323,10324,10325,10326,10327,10328,10329,10330,10331,10332,10333,10334,10335,10336,10337,10338,10339,10340,10341,10342,10343,10344,10345,10346,10347,10348,10349], visible=True, start_delay=1, interval=1, fade=0.5)
        # self.set_mesh(trigger_ids=[15001,15002,15003,15004,15005,15006,15007,15008,15009,15010,15011,15012,15013,15014,15015,15016,15017,15018,15019,15020,15021,15022,15023,15024,15025,15026,15027,15028,15029,15030,15031,15032,15033,15034,15035,15036,15037,15038,15039,15040,15041,15042,15043,15044,15045,15046,15047,15048,15049,15050,15051,15052,15053,15054,15055,15056,15057,15058,15059,15060,15061,15062,15063,15064,15065,15066,15067,15068,15069,15070,15071,15072,15073,15074,15075,15076,15077,15078,15079,15080,15081,15082,15083,15084,15085,15086,15087,15088,15089,15090,15091,15092,15093,15094,15095,15096,15097,15098,15099,15100,15101,15102,15103,15104,15105,15106,15107,15108,15109,15110,15111,15112,15113,15114,15115,15116,15117,15118,15119,15120,15121,15122,15123,15124,15125,15126,15127,15128,15129,15130,15131,15132,15133,15134,15135,15136,15137,15138,15139,15140,15141,15142,15143,15144,15145,15146,15147,15148,15149,15150,15151,15152,15153,15154,15155,15156,15157,15158,15159,15160,15161,15162,15163,15164,15165,15166,15167,15168,15169,15170,15171,15172,15173,15174,15175,15176,15177,15178,15179,15180,15181,15182,15183,15184,15185,15186,15187,15188,15189,15190,15191,15192,15193,15194,15195,15196,15197,15198,15199,15200,15201,15202,15203,15204,15205,15206,15207,15208,15209,15210,15211,15212,15213,15214,15215,15216,15217,15218,15219,15220,15221,15222,15223,15224,15225,15226,15227,15228,15229,15230,15231,15232,15233,15234,15235,15236,15237,15238,15239,15240,15241,15242,15243,15244,15245,15246,15247,15248,15249,15250,15251,15252,15253,15254,15255,15256,15257,15258,15259,15260,15261,15262,15263,15264,15265,15266,15267,15268,15269,15270,15271,15272,15273,15274,15275,15276,15277,15278,15279,15280,15281,15282,15283,15284,15285,15286,15287,15288,15289,15290,15291,15292,15293,15294,15295,15296,15297,15298,15299,15300,15301,15302,15303,15304,15305,15306,15307,15308,15309,15310,15311,15312,15313,15314,15315,15316,15317,15318,15319,15320,15321,15322,15323,15324,15325,15326,15327,15328,15329,15330,15331,15332,15333,15334,15335,15336,15337,15338,15339,15340,15341,15342,15343,15344,15345,15346,15347,15348,15349,15350,15351,15352,15353,15354,15355,15356,15357,15358,15359,15360,15361,15362,15363,15364,15365,15366,15367,15368,15369,15370,15371,15372,15373,15374,15375,15376,15377,15378,15379,15380,15381,15382,15383,15384,15385,15386,15387,15388,15389,15390,15391,15392,15393,15394,15395,15396,15397,15398,15399,15400,15401,15402,15403,15404,15405,15406,15407,15408,15409,15410,15411,15412,15413,15414,15415,15416,15417,15418,15419,15420,15421,15422,15423,15424,15425,15426,15427,15428,15429,15430,15431,15432,15433,15434,15435,15436,15437,15438,15439,15440,15441,15442,15443,15444,15445,15446,15447,15448,15449,15450,15451,15452,15453,15454,15455,15456,15457,15458,15459,15460,15461,15462,15463,15464,15465,15466,15467], visible=True, start_delay=1, interval=1, fade=0.5)
        # self.set_mesh(trigger_ids=[20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,20011,20012,20013,20014,20015,20016,20017,20018,20019,20020,20021,20022,20023,20024,20025,20026,20027,20028,20029,20030,20031,20032,20033,20034,20035,20036,20037,20038,20039,20040,20041,20042,20043,20044,20045,20046,20047,20048,20049,20050,20051,20052,20053,20054,20055,20056,20057,20058,20059,20060,20061,20062,20063,20064,20065,20066,20067,20068,20069,20070,20071,20072,20073,20074,20075,20076,20077,20078,20079,20080,20081,20082,20083,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20094,20095,20096,20097,20098,20099,20100,20101,20102,20103,20104,20105,20106,20107,20108,20109,20110,20111,20112,20113,20114,20115,20116,20117,20118,20119,20120,20121,20122,20123,20124,20125,20126,20127,20128,20129,20130,20131,20132,20133,20134,20135,20136,20137,20138,20139,20140,20141,20142,20143,20144,20145,20146,20147,20148,20149,20150,20151,20152,20153,20154,20155,20156,20157,20158,20159,20160,20161,20162,20163,20164,20165,20166,20167,20168,20169,20170,20171,20172,20173,20174,20175,20176,20177,20178,20179,20180,20181,20182,20183,20184,20185,20186,20187,20188,20189,20190,20191,20192,20193,20194,20195,20196,20197,20198,20199,20200,20201,20202,20203,20204,20205,20206,20207,20208,20209,20210,20211,20212,20213,20214,20215], visible=True, start_delay=1, interval=1, fade=0.5)
        # self.set_mesh(trigger_ids=[23001,23002,23003,23004,23005,23006,23007,23008,23009,23010,23011,23012,23013,23014,23015,23016,23017,23018,23019,23020,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23033,23034,23035,23036,23037,23038,23039,23040,23041,23042,23043,23044,23045,23046,23047,23048,23049,23050,23051,23052,23053,23054,23055,23056,23057,23058,23059,23060,23061,23062,23063,23064,23065,23066,23067,23068,23069,23070,23071,23072,23073,23074,23075,23076,23077,23078,23079,23080,23081,23082,23083,23084,23085,23086,23087,23088,23089,23090,23091,23092,23093,23094,23095,23096,23097,23098,23099,23100,23101,23102,23103,23104,23105,23106,23107,23108,23109,23110,23111,23112,23113,23114,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23125,23126,23127,23128,23129,23130,23131,23132,23133,23134,23135,23136,23137,23138,23139,23140,23141,23142,23143,23144,23145,23146,23147,23148,23149,23150,23151,23152,23153,23154,23155,23156,23157,23158,23159,23160,23161,23162,23163,23164,23165,23166,23167,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23186,23187,23188,23189,23190,23191,23192,23193,23194,23195,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23210,23211,23212,23213,23214,23215], visible=True, start_delay=1, interval=1, fade=0.5)
        # self.set_mesh(trigger_ids=[26001,26002,26003,26004,26005,26006,26007,26008,26009,26010,26011,26012,26013,26014,26015,26016,26017,26018,26019,26020,26021,26022,26023,26024,26025,26026,26027,26028,26029,26030,26031,26032,26033,26034,26035,26036,26037,26038,26039,26040,26041,26042,26043,26044,26045,26046,26047,26048,26049,26050,26051,26052,26053,26054,26055,26056,26057,26058,26059,26060,26061,26062,26063,26064,26065,26066,26067,26068,26069,26070,26071,26072,26073,26074,26075,26076,26077,26078,26079,26080,26081,26082,26083,26084,26085,26086,26087,26088,26089,26090,26091,26092,26093,26094,26095,26096,26097,26098,26099,26100,26101,26102,26103,26104,26105,26106,26107,26108,26109,26110,26111,26112,26113,26114,26115,26116,26117,26118,26119,26120,26121,26122,26123,26124,26125,26126,26127,26128,26129,26130,26131,26132,26133,26134,26135,26136,26137,26138,26139,26140,26141,26142,26143,26144,26145,26146,26147,26148,26149,26150,26151,26152,26153,26154,26155,26156,26157,26158,26159,26160,26161,26162,26163,26164,26165,26166,26167,26168,26169,26170,26171,26172,26173,26174,26175,26176,26177,26178,26179,26180,26181,26182,26183,26184,26185,26186,26187,26188,26189,26190,26191,26192,26193,26194,26195,26196,26197,26198,26199,26200,26201,26202,26203,26204,26205,26206,26207,26208,26209,26210,26211,26212,26213,26214,26215], visible=True, start_delay=1, interval=1, fade=0.5)
        # self.set_mesh(trigger_ids=[30001,30002,30003,30004,30005,30006,30007,30008,30009,30010,30011,30012,30013,30014,30015,30016,30017,30018,30019,30020,30021,30022,30023,30024,30025,30026,30027,30028,30029,30030,30031,30032,30033,30034,30035,30036,30037,30038,30039,30040,30041,30042,30043,30044,30045,30046,30047,30048,30049,30050,30051,30052,30053,30054,30055,30056,30057,30058,30059,30060,30061,30062,30063,30064,30065,30066,30067,30068,30069,30070,30071,30072,30073,30074,30075,30076,30077,30078,30079,30080,30081,30082,30083,30084,30085,30086,30087,30088,30089,30090,30091,30092,30093,30094,30095,30096,30097,30098,30099,30100,30101,30102,30103,30104,30105,30106,30107,30108,30109,30110,30111,30112,30113,30114,30115,30116,30117,30118,30119,30120,30121,30122,30123,30124,30125,30126,30127,30128,30129,30130,30131,30132,30133,30134,30135,30136,30137,30138,30139,30140,30141,30142,30143,30144,30145,30146,30147,30148,30149,30150,30151,30152,30153,30154,30155,30156,30157,30158,30159,30160,30161,30162,30163,30164,30165,30166,30167,30168,30169,30170,30171,30172,30173,30174,30175,30176,30177,30178,30179,30180,30181,30182,30183,30184,30185,30186,30187,30188,30189,30190,30191,30192,30193,30194,30195,30196,30197,30198,30199,30200,30201,30202,30203,30204,30205,30206,30207,30208,30209,30210,30211,30212,30213,30214,30215,30216,30217,30218,30219,30220,30221,30222,30223,30224,30225,30226,30227,30228,30229,30230,30231,30232,30233,30234,30235,30236,30237,30238,30239,30240,30241,30242,30243,30244,30245,30246,30247,30248,30249,30250,30251,30252,30253,30254,30255,30256,30257,30258,30259,30260,30261,30262,30263,30264,30265,30266,30267,30268,30269,30270,30271,30272,30273,30274,30275,30276,30277,30278,30279,30280,30281,30282,30283,30284,30285,30286,30287,30288,30289,30290,30291,30292,30293,30294,30295,30296,30297,30298,30299,30300,30301,30302,30303,30304,30305,30306,30307,30308,30309,30310,30311,30312,30313,30314,30315,30316,30317,30318,30319,30320,30321,30322,30323,30324,30325,30326,30327,30328,30329,30330,30331,30332,30333,30334,30335,30336,30337,30338,30339,30340,30341,30342,30343,30344,30345,30346,30347,30348,30349,30350,30351,30352,30353,30354,30355,30356,30357,30358,30359,30360,30361,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30372,30373,30374,30375,30376,30377,30378,30379,30380,30381,30382,30383,30384,30385,30386,30387,30388,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30399,30400,30401,30402,30403,30404,30405,30406,30407,30408,30409,30410,30411,30412,30413], visible=True, start_delay=1, interval=1, fade=0.5)
        # self.set_mesh(trigger_ids=[35001,35002,35003,35004,35005,35006,35007,35008,35009,35010,35011,35012,35013,35014,35015,35016,35017,35018,35019,35020,35021,35022,35023,35024,35025,35026,35027,35028,35029,35030,35031,35032,35033,35034,35035,35036,35037,35038,35039,35040,35041,35042,35043,35044,35045,35046,35047,35048,35049,35050,35051,35052,35053,35054,35055,35056,35057,35058,35059,35060,35061,35062,35063,35064,35065,35066,35067,35068,35069,35070,35071,35072,35073,35074,35075,35076,35077,35078,35079,35080,35081,35082,35083,35084,35085,35086,35087,35088,35089,35090,35091,35092,35093,35094,35095,35096,35097,35098,35099,35100,35101,35102,35103,35104,35105,35106,35107,35108,35109,35110,35111,35112,35113,35114,35115,35116,35117,35118,35119,35120,35121,35122,35123,35124,35125,35126,35127,35128,35129,35130,35131,35132,35133,35134,35135,35136,35137,35138,35139,35140,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35166,35167,35168,35169,35170,35171,35172,35173,35174,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35195,35196,35197,35198,35199,35200,35201,35202,35203,35204,35205,35206,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35265,35266,35267,35268,35269,35270,35271,35272,35273,35274,35275,35276,35277,35278,35279,35280,35281,35282,35283,35284,35285,35286,35287,35288,35289,35290,35291,35292,35293,35294,35295,35296,35297,35298,35299,35300,35301,35302,35303,35304,35305,35306,35307,35308,35309,35310,35311,35312,35313,35314,35315,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35328,35329,35330,35331,35332,35333,35334,35335,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35390,35391,35392,35393,35394,35395,35396,35397,35398,35399,35400,35401,35402], visible=True, start_delay=1, interval=1, fade=0.5)
        self.set_portal(portal_id=118, visible=True, enable=True, minimap_visible=True) # 첫번째 왼쪽 졸구간 진입 포탈 생성
        self.set_portal(portal_id=128, visible=True, enable=True, minimap_visible=True) # 첫번째 가운데 졸구간 진입 포탈 생성
        self.set_portal(portal_id=138, visible=True, enable=True, minimap_visible=True) # 첫번째 오른쪽 졸구간 진입 포탈 생성
        self.set_portal(portal_id=218, visible=True, enable=True, minimap_visible=True) # 두번째 왼쪽 졸구간 포탈 생성
        self.set_portal(portal_id=228, visible=True, enable=True, minimap_visible=True) # 두번째 가운데 졸구간 포탈 생성
        self.set_portal(portal_id=328, visible=True, enable=True, minimap_visible=True) # 세번째 왼쪽 졸구간 포탈 생성
        self.set_portal(portal_id=238, visible=True, enable=True, minimap_visible=True) # 두번째 오른쪽 졸구간 포탈 생성
        self.set_portal(portal_id=318, visible=True, enable=True, minimap_visible=True) # 보스 전투판으로 가는 왼쪽 졸구간 포탈 생성
        # 보스 전투판으로 가는 가운데 졸구간 포탈 생성
        self.set_portal(portal_id=428, visible=True, enable=True, minimap_visible=True)
        # 보스 전투판으로 가는 오른쪽 졸구간 포탈 생성
        self.set_portal(portal_id=338, visible=True, enable=True, minimap_visible=True)
        # 그리고 졸 몬스터 전부 제거하기,   <state name="이맵에서진행끝내고다음맵으로이동">  이 부분에도 같은 졸몹 제거 설정 하였음
        self.destroy_monster(spawn_ids=[1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120])
        self.destroy_monster(spawn_ids=[1201,1202,1203,1204,1205,2201,2202,2203,2204,2205,3201,3202,3203,3204,3205])
        self.destroy_monster(spawn_ids=[1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315])

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=800):
            return 졸구간진행체크중(self.ctx)


class 이맵에서진행끝내고다음맵으로이동(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 세번째페이즈 진행하는 다음 맵으로 이동시키기, 2페이지 전투판에 위치한 포탈
        self.set_portal(portal_id=599, visible=True, enable=True, minimap_visible=True)
        # 최초 시작 지점에 바로 2페이지 메인 전투판으로 포내는 포탈 생성하기, 참고로 포탈 arg1="598" 과 arg1="108"은 스타팅 포인트 같은 좌표에 있음
        self.set_portal(portal_id=598, visible=True, enable=True, minimap_visible=True)
        # 세번째페이즈 넘어가야 하는 상황이 되면, 최초 시작 지점에서 1페이즈 전투판으로 가는 포탈 다시 감추기, 108: 스타팅 지점에서 1페이지 전투판 근처로 도착
        self.set_portal(portal_id=108, visible=False, enable=False, minimap_visible=False)
        # 졸구간 진행 중 보스한테 잡힌 플레이어가 보스를 처치하는 경우도 있기 때문에 최종 마지막 단계에서 무조건 모든 포탈 생성 설정 다시한번 넣기
        self.set_portal(portal_id=118, visible=True, enable=True, minimap_visible=True) # 첫번째 왼쪽 졸구간 진입 포탈 생성
        self.set_portal(portal_id=128, visible=True, enable=True, minimap_visible=True) # 첫번째 가운데 졸구간 진입 포탈 생성
        self.set_portal(portal_id=138, visible=True, enable=True, minimap_visible=True) # 첫번째 오른쪽 졸구간 진입 포탈 생성
        self.set_portal(portal_id=218, visible=True, enable=True, minimap_visible=True) # 두번째 왼쪽 졸구간 포탈 생성
        self.set_portal(portal_id=228, visible=True, enable=True, minimap_visible=True) # 두번째 가운데 졸구간 포탈 생성
        self.set_portal(portal_id=328, visible=True, enable=True, minimap_visible=True) # 세번째 왼쪽 졸구간 포탈 생성
        self.set_portal(portal_id=238, visible=True, enable=True, minimap_visible=True) # 두번째 오른쪽 졸구간 포탈 생성
        self.set_portal(portal_id=318, visible=True, enable=True, minimap_visible=True) # 보스 전투판으로 가는 왼쪽 졸구간 포탈 생성
        # 보스 전투판으로 가는 가운데 졸구간 포탈 생성
        self.set_portal(portal_id=428, visible=True, enable=True, minimap_visible=True)
        # 보스 전투판으로 가는 오른쪽 졸구간 포탈 생성
        self.set_portal(portal_id=338, visible=True, enable=True, minimap_visible=True)
        # 이 맵에서 전투 끝났으니, 보스BGM끄고 일반BGM이 나오게 하기,  TimeCheck.xml 트리거에서도 같은 BGM 교체 트리거 사용함
        self.set_sound(trigger_id=140140, enable=True)
        # 졸 몬스터 전부 제거하기, 졸구간 클리어 없이 바로 보스 HP 1% 이하로 만드는 경우도 있어서 부부분 다시 선언함,  <state name="모든졸구간지형과포탈생성"> 에도 같은 졸몹 제거 설정 하였음
        self.destroy_monster(spawn_ids=[1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120])
        self.destroy_monster(spawn_ids=[1201,1202,1203,1204,1205,2201,2202,2203,2204,2205,3201,3202,3203,3204,3205])
        self.destroy_monster(spawn_ids=[1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315])

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=9000):
            # 보스의 맵 파괴 연출 동작이 끝날때까지 여기서 9~10초 정도 waitTick 해야함
            return 종료안내메시지_대기(self.ctx)
        if self.dungeon_timeout():
            # 던전 시간 다 된경우
            return 던전실패(self.ctx)
        if self.dungeon_state() == 'Fail':
            # 던전을 포기해서 실패한 경우
            return 던전실패(self.ctx)


class 종료안내메시지_대기(trigger_api.Trigger):
    def on_tick(self) -> trigger_api.Trigger:
        if self.user_detected(box_ids=[97]):
            # MS2TriggerBox   TriggerObjectID = 97, 이 트리거 박스 안에 플레이어가 한명이라도 체크 되면        97는 2페이지 전투판만 커버하는 범위
            return 종료안내메시지(self.ctx)


class 종료안내메시지(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 보스가 맵 파괴 스킬 사용하기는 하나, 혹시 몰라서 맵 스킬쪽에서도 한번 더 파괴 행동을 함  CubeBreak ,  MS2TriggerSkill = 92 스킬코드 70000105(레벨2) 발동시켜 바닥 파괴하여, 맵 02020142 으로 갈수 있도록 하기
        self.set_skill(trigger_ids=[92], enable=True)
        # 안내 메시지 호출하기, 메시지 글씨 작성 엑셀파일은 여기 stringGuide.xlsx
        self.destroy_monster(spawn_ids=[-1])
        self.show_guide_summary(entity_id=29200004, text_id=29200004)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=15500):
            # 안내 메시지 15~16초 정도 출력후 다시 "종료_메시지대기" 단계로 돌아가기
            return 종료_메시지대기(self.ctx)

    def on_exit(self) -> None:
        self.hide_guide_summary(entity_id=29200004)


class 종료_메시지대기(trigger_api.Trigger):
    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=3000):
            return 종료안내메시지_다시출력_대기(self.ctx)
        if self.dungeon_timeout():
            # 던전 시간 다 된경우
            return 던전실패(self.ctx)
        if self.dungeon_state() == 'Fail':
            # 던전을 포기해서 실패한 경우
            return 던전실패(self.ctx)


class 종료안내메시지_다시출력_대기(trigger_api.Trigger):
    def on_tick(self) -> trigger_api.Trigger:
        if self.user_detected(box_ids=[97]):
            # MS2TriggerBox   TriggerObjectID = 97, 이 트리거 박스 안에 플레이어가 한명이라도 체크 되면        97는 2페이지 전투판만 커버하는 범위
            return 종료안내메시지_다시출력(self.ctx)


class 종료안내메시지_다시출력(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 안내 메시지 호출하기, 메시지 글씨 작성 엑셀파일은 여기 stringGuide.xlsx
        self.show_guide_summary(entity_id=29200004, text_id=29200004)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=15500):
            # 안내 메시지 15~16초 정도 출력후 다시 "종료_메시지대기" 단계로 돌아가기
            return 종료_메시지대기(self.ctx)
        if self.dungeon_timeout():
            # 던전 시간 다 된경우
            return 던전실패(self.ctx)
        if self.dungeon_state() == 'Fail':
            # 던전을 포기해서 실패한 경우
            return 던전실패(self.ctx)

    def on_exit(self) -> None:
        self.hide_guide_summary(entity_id=29200004)


class 던전실패(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        # 시간 기능 종료시킴, 이 기능 잘 작동시키려면 DungeonRoom.xlsx 의 제한 시간 만료 시(isExpireTimeOut) 빈칸 설정 해야 함
        self.dungeon_set_end_time()
        self.dungeon_close_timer()
        self.destroy_monster(spawn_ids=[-1])
        # 나가기 포탈 생성하기, 졸구간 전투판에서 나가기 포탈
        self.set_portal(portal_id=1, visible=True, enable=True, minimap_visible=True)

    def on_tick(self) -> trigger_api.Trigger:
        if self.wait_tick(wait_tick=500):
            self.dungeon_fail()
            return 종료(self.ctx)


class 종료(trigger_api.Trigger):
    def on_enter(self) -> 'trigger_api.Trigger':
        self.dungeon_enable_give_up(is_enable='0')


initial_state = 시작대기중
